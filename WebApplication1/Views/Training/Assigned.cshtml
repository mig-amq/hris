@using WebApplication1.Models

@{
    /**/

    ViewBag.Title = "Assigned Trainings";
    ViewBag.Active = "AT";

    Account Account = (Session["user"] == null) ? null : (Account)Session["user"];
}

@if (Account != null)
{
    <div id="modal">
        <img src="@Url.Content("~/Content/assets/icons/close.svg")" id="modal-close" />
        <div id="modal-form">
            <h2 class="title">Assign Employee Training</h2>
            <form id="training">
                <div class="cluster">
                    <p class="sub-title">Training</p>
                    <div class="ui-widget">
                        <select id="training-combo" name="training">
                            <option value="-1" selected disabled>-- Select A Training--</option>
                        </select>
                    </div>
                    <p class="sub-title">Employee</p>
                    <div class="ui-widget">
                        <select id="employee-combo" name="profile">
                            <option value="-1" selected disabled>-- Select An Employee --</option>
                        </select>
                    </div>
                </div>
                <button type="submit">Assign Training</button>
                <div id="alert"></div>
            </form>
        </div>
    </div>

    <div id="section-heading">
        <div>
            <h1 id="section-title">Assigned Trainings</h1>
            @if (Account != null && Account.Type == AccountType.DepartmentHead && ((Employee)Account.Profile).Department.Type == DepartmentType.HumanResources)
            {
                <button class="hallow modal-trigger" onclick="load()">
                    <img src="@Url.Content("~/Content/assets/icons/add.svg")" />
                    Assign
                </button>
            }
            &nbsp; &nbsp; &nbsp;
            <span>
                Show
                <select id="show-entries" onchange="search(curr)">
                    <!-- JAVASCRIPT GENERATED -->
                </select>
                Entries
            </span>
        </div>
        <input type="text" placeholder="Search Assigned Trainings..." class="search" id="search" onkeypress="if (event.keyCode == 13) search(curr)" />
    </div>
    <br />
    <table>
        <thead>
            <tr class="heading-row">
                <th>No.</th>
                <th>Title</th>
                <th>Facilitator</th>
                <th>Schedule/Time</th>
                <th>Location</th>
                <th>Employee Name</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody id="data"></tbody>
    </table>
    <div id="result-summary">
        <div>
            @if (Account != null && ((Employee)Account.Profile).Department.Type == DepartmentType.HumanResources)
            {
            
                <button class="footer-button">Generate Report</button>
            }
            <span id="result-count">Showing <b>1 - 1</b> out of <span>1</span> results</span>
        </div>
        <div id="pagination">
            <span class="active">1</span>
        </div>
    </div>

    if (Account != null && Account.Type == AccountType.DepartmentHead && ((Employee)Account.Profile).Department.Type == DepartmentType.HumanResources)
    {
        <script>
            $("#training").on("submit", (e) => {
                e.preventDefault();
                var form = new FormData($("#training")[0]);

                $.ajax({
                    url: "/Training/Assign/",
                    method: "POST",
                    data: form,
                    processData: false,
                    contentType: false,
                    success: (data) => {
                        if (data.error)
                            $("#alert").addClass('error');
                        else
                            $("#alert").addClass('success');
                    
                        $("#alert").text(data.message);

                        if (!data.error) {
                            search(curr + 1);
                            $("#modal").hide();
                        }
                    }
                })
            })

            function load() {
                $.ajax({
                    url: "/Training/GetList",
                    method: "GET",
                    success: (data) => {
                        $("#employee-combo option:not(:first-child)").remove();
                        $("#training-combo option:not(:first-child)").remove();

                        data.trainings.forEach((o, i, a) => {
                            let s = new Date(o.StartDate);
                            let e = new Date(o.EndDate);

                            let schedule = (s.getMonth() + 1) + "/" + (s.getDate()) + "/" + s.getFullYear() + " - "
                                + (e.getMonth() + 1) + "/" + (e.getDate()) + "/" + e.getFullYear();

                            let title = `${o.Title} (${schedule})`;
                            $("#training-combo").append(`<option value=${o.TrainingHistoryID}>${title}</option>`);
                        });
                        
                        data.profiles.forEach((o, i, a) => {
                            $("#employee-combo").append(`<option value=${o.ProfileID}>${o.FirstName} ${o.MiddleName} ${o.LastName}</option>`);
                        })
                    }
                })
            }

            function update(n, elem) {
                $.ajax({
                    url: "/Training/UpdateAssigned",
                    method: "POST",
                    data: {
                        id: n,
                        v: $(elem).val()
                    },
                    success: (data) => {
                        if (data.error)
                            alert(data.message);
                    }
                })
            }
        </script>
    }

    <script>
        var curr = 1;
        $(document).ready(() => {
            search(1);
        })

        function search(n) {
            curr = n;
            $.ajax({
                url: "/Training/GetAssigned",
                data: {
                    'entries': $("#show-entries").val() || 5,
                    'page': n || 1,
                    'query': $("#search").val().trim().replace(/\s+/, " "),
                },
                method: "GET",
                success: (data) => {
                    $("#data").empty();
                    $("#pagination").empty();
                    if (data.pages > 0) {
                        $("#result-count b").text(((n - 1) * ($("#show-entries").val() || 5) + 1) +
                            " - " +
                            (((n - 1) * ($("#show-entries").val() || 5)) + data.trainings.length));
                    } else {
                        $("#result-count b").text("0 - 0");
                    }
                    $("#result-count span").text(data.total);

                    if (data.pages < curr && curr > 1) {
                        curr--;
                        search(curr);
                    }
                    for (var i = 1; i <= data.pages; i++) {
                        $("#pagination").append("<span href='#' data-page='" + i + "' onclick=event.preventDefault();search(" + i + ");> " + i + "</span> ");
                    }

                    $("#pagination span[data-page=" + n + "]").addClass("active");
                    data.trainings.forEach((o, i, a) => {
                        let s = new Date(o.Training.StartDate);
                        let e = new Date(o.Training.EndDate);

                        let schedule = (s.getMonth() + 1) + "/" + (s.getDate()) + "/" + s.getFullYear() + " - "
                            + (e.getMonth() + 1) + "/" + (e.getDate()) + "/" + e.getFullYear();
                        let row = $("<tr></tr>");
                        let id = $("<td></td>").text(o.AssignedTrainingID);
                        let code = $("<td></td>").text(o.Training.Title);
                        let name = $("<td></td>").text(o.Training.Facilitator);
                        let dep = $("<td></td>").text(schedule);
                        let pos = $("<td></td>").text(o.Training.Location);
                        let emp = $("<td></td>").text(o.Profile.FirstName + " " + o.Profile.MiddleName + " " + o.Profile.LastName);
                        let status = $("<td></td>");

                        @if (Account != null && Account.Type == AccountType.DepartmentHead && ((Employee)Account.Profile).Department.Type == DepartmentType.HumanResources)
                    {
                            <text>
                                status.append("<select onchange='update(" + o.AssignedTrainingID + ", this)'><option value=1 selected>Pending</option><option value=2>Attended</option></select>");
                                status.find("select").val(o.Status);
                            </text>
                    }
                    else
                    {
                        <text>
                            status.text(o.Status == 1 ? "Pending" : "Attended");
                        </text>
                    }

                        row.append(id);
                        row.append(code);
                        row.append(name);
                        row.append(dep);
                        row.append(pos);
                        row.append(emp);
                        row.append(status);

                        $("#data").append(row);
                    });
                }
            })
        }
    </script>
}
