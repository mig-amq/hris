@using Calfurn.Models
@using WebApplication1.Models
@{
    ViewBag.Active = "AS";
    ViewBag.Title = "Applicant Status";


    Account Account = (Session["user"] == null) ? null : (Account)Session["user"];
}
<div id="section-heading">
    <div>
        <h1 id="section-title">Application Status</h1>
        <span>
            Show
            <select id="show-entries" onchange="search(curr)">
                <!-- JAVASCRIPT GENERATED -->
            </select>
            Entries
        </span>
    </div>
    <input type="text" placeholder="Search Application Status..." class="search" id="search" onkeypress="if(event.keyCode == 13) search(curr)" />
</div>
<br />
<table>
    <thead>
        <tr id="heading-row">
            <th>No.</th>
            <th>Applicant Name</th>
            <th>Contact Number</th>
            <th>Desired Position</th>
            <th>Skills</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody id="data">
    </tbody>
</table>

<div id="result-summary">
    <div>
        <span id="result-count">Showing <b>1 - 1</b> out of <span>1</span> results</span>
    </div>
    <div id="pagination">
        <span class="active">1</span>
    </div>
</div>

<script>
    var curr = 1;
    $(document).ready(() => {
        search(1);
    });

    function loadScheduler(n) {
        let btn = $("<button class='hallow modal-trigger'>Ready for Interview</button>");

        btn.click((e) => { load(n) });

        return btn;
    }

    function search(n) {
        curr = n;
        $.ajax({
            url: "/Recruitment/GetApplications",
            data: {
                'entries': $("#show-entries").val() || 5,
                'page': n || 1,
                'query': $("#search").val().trim().replace(/\s+/, " "),
                @if (Account != null && Account.Type == AccountType.Applicant)
                {
                    <text>
                        'id': @(((Applicant)Account.Profile).ApplicantID)
                    </text>
                }
            },
            method: "GET",
            success: (data) => {
                $("#data").empty();
                $("#pagination").empty();
                if (data.pages > 0) {
                    $("#result-count b").text(((n - 1) * ($("#show-entries").val() || 5) + 1) +
                        " - " +
                        (((n - 1) * ($("#show-entries").val() || 5)) + data.applications.length));
                } else {
                    $("#result-count b").text("0 - 0");
                }
                $("#result-count span").text(data.total);

                if (data.pages < curr && curr > 1) {
                    curr--;
                    search(curr);
                }

                for (var i = 1; i <= data.pages; i++) {
                    $("#pagination").append("<span href='#' data-page='" + i + "' onclick=event.preventDefault();search(" + i + ");> " + i + "</span> ");
                }

                $("#pagination span[data-page=" + n + "]").addClass("active");
                data.applications.forEach((o, i, a) => {
                    console.log(o);
                    let row = $("<tr></tr>");
                    let id = $("<td></td>").text(o.JobApplicationID);
                    let app = $("<td></td>").html("<a href='/Home/Dashboard/?id=" + o.Applicant.ApplicantID + "'>" + o.Applicant.Profile.FirstName + " " + o.Applicant.Profile.LastName + "</a>");
                    let cont = $("<td></td>").html("<a href='tel:" + o.Applicant.Profile.Contact + "'>" + o.Applicant.Profile.Contact + "</a>");
                    let des = $("<td></td>").text(o.JobPosting.JobTitle);
                    let ski = $("<td></td>").text(o.Applicant.Skills);
                    let sta = $("<td></td>");
                    
                    @if (Account.Type == AccountType.Applicant)
                    {
                        <text>
                    sta.text(o.Status == @((int)JobApplicationStatus.Schedule) ? ("Scheduled Interview: " + (new Date(o.Schedule.TimeStart)).toLocaleString()) : o.Status == @((int)JobApplicationStatus.Undecided) ? "Pending" : o.Status == @((int)JobApplicationStatus.Unscheduled) ? "Unscheduled" : "Rejected");                   
                        </text>
                    } else if (((Employee)Account.Profile).Department.Type == DepartmentType.HumanResources)
                    {
                        <text>
                            if (o.Status == @((int)JobApplicationStatus.Undecided)) {
                                // approve/reject for schedule
                                let sel = $("<select><option value=''>-- Approve/Reject --</option> <option value='@((int)JobApplicationStatus.Accepted)'>Accept</option><option value='@((int)JobApplicationStatus.Rejected)'>Reject</option></select>")
                                sel.on("change", (e) => {
                                    $.ajax({
                                        url: "/Recruitment/UpdateStatus",
                                        method: "POST",
                                        data: {
                                            "id": o.JobApplicationID,
                                            "status": (sel.val() == @((int)JobApplicationStatus.Rejected) ? sel.val() : @((int)JobApplicationStatus.Unscheduled))
                                        },
                                        success: (data) => {
                                            if (data.error)
                                                alert(data.message);
                                            else if (data.message == @((int)JobApplicationStatus.Rejected))
                                                sta.html("Rejected");
                                            else
                                                sta.html(loadScheduler(o.JobApplicationID));
                                        }
                                    })
                                });

                                sta.append(sel);
                            } else if (o.Status == @((int)JobApplicationStatus.Unscheduled)) {
                                // schedule
                                sta.append(loadScheduler(o.JobApplicationID));
                            } else if (o.Status == @((int)JobApplicationStatus.Rejected)) {
                                sta.text("Rejected");
                            }  else {
                                if (o.Schedule) {
                                    let now = Date.now();
                                    let sched = Date.parse(o.Schedule.TimeStart);

                                    if (now > sched) {
                                        // apprive/reject for employment
                                        let sel = $(
                                            "<select><option value=''>-- Approve/Reject --</option> <option value='@((int)JobApplicationStatus.Accepted)'>Accept</option><option value='@((int)JobApplicationStatus.Rejected)'>Reject</option></select>")

                                        sel.on("change", (e) => {
                                            $.ajax({
                                                url: "/Recruitment/UpdateStatus",
                                                method: "POST",
                                                data: {
                                                    "id": o.JobApplicationID,
                                                    "status": sel.val()
                                                },
                                                success: (data) => {
                                                    if (data.error)
                                                        alert(data.message);
                                                    else if (data.message == @((int)JobApplicationStatus.Rejected))
                                                        sta.html("Rejected");
                                                    else
                                                        search(curr);
                                                }
                                            })
                                        })

                                        sta.append(sel);
                                    } else {
                                        sta.text("Scheduled Interview: " + (new Date(o.Schedule.TimeStart)).toLocaleString());
                                    }
                                }
                            }
                        </text>
                    }
                    row.append(id).append(app).append(cont).append(des).append(ski).append(sta);
                    $("#data").append(row);
                })
            }
        })
    }
</script>
@if (Account != null && Account.Type != AccountType.Applicant && ((Employee)Account.Profile).Department.Type == DepartmentType.HumanResources)
{

    <div id="modal">
        <img src="@Url.Content("~/Content/assets/icons/close.svg")" id="modal-close" />
        <div id="modal-form">
            <h2 class="title">Edit Employee Status</h2>
            <form>
                <div class="cluster">
                    <div class="date">
                        <p class="sub-title">Interview Date</p>
                        <select id="month" name="month" required>
                            <option value="">-- Select month --</option>
                            <!-- JS generated -->
                        </select>
                        <select id="day" name="day" required>
                            <option value="">-- Select day --</option>
                            <!-- JS generated -->
                        </select>
                        <select id="year" name="year" required data-min="@DateTime.Now.Year">
                            <option value="">-- Select year --</option>
                            <!-- JS generated -->
                        </select>
                    </div>
                    
                    <div class="cluster">
                        <p class="sub-title">Start Time:</p>
                        <div class="two-column-content">
                            <select name="start" required="">
                                <option value="">-- Select Starting Time --</option>
                                <option value="800">08:00 AM</option>
                                <option value="830">08:30 AM</option>
                                <option value="900">09:00 AM</option>
                                <option value="930">09:30 AM</option>
                                <option value="1000">10:00 AM</option>
                                <option value="1030">10:30 AM</option>
                                <option value="1100">11:00 AM</option>
                                <option value="1130">11:30 AM</option>
                                <option value="1200">12:00 NN</option>
                                <option value="1230">12:30 PM</option>
                                <option value="1300">01:00 PM</option>
                                <option value="1330">01:30 PM</option>
                                <option value="1400">02:00 PM</option>
                                <option value="1430">02:30 PM</option>
                                <option value="1500">03:00 PM</option>
                                <option value="1530">03:30 PM</option>
                                <option value="1600">04:00 PM</option>
                                <option value="1630">04:30 PM</option>
                                <option value="1700">05:00 PM</option>
                            </select>
                        </div>
                    </div>
                </div>
                <button type="submit">Save</button>
            </form>
            <div id="alert" class="full"></div>
        </div>
    </div>
    <script>
        function load(n) {
            $("#alert").removeAttr("class");
            $.ajax({
                url: "/Recruitment/GetSchedule",
                method: "GET",
                data: {
                    id: n
                },
                success: (data) => {
                    if (data.schedule == null) {
                        $("form").on("submit", (e) => {
                            $("#alert").removeAttr("class");
                            e.preventDefault(); // add schedule
                            var hour = parseInt($("select[name=start]").val() / 100);
                            var minute = parseInt($("select[name=start]").val() % 100);

                            var date = new Date($("#year").val(), $("#month").val(), $("#day").val(), hour, minute);
                            var iso = date.toISOString();

                            $.ajax({
                                url: "/Recruitment/CreateSchedule",
                                method: "POST",
                                data: {
                                    id: n,
                                    start: iso
                                },
                                success: (data2) => {
                                    if (data2.error) {
                                        $("#alert").addClass("error");
                                    } else {
                                        $("#alert").addClass("success");
                                    }


                                    $("#alert").text(data2.message);
                                }
                            })
                        });
                        $("#alert").addClass("info").text("There are no schedules appointed to this applicant yet");
                    } else {
                        var date = new Date(data.schedule.TimeStart);

                        $("#year").val(date.getFullYear());
                        $("#month").val(date.getMonth());
                        $("#day").val(date.getDate());

                        $("select[name=start]").val(date.getHours() * 100 + date.getMinutes());
                        $("form").on("submit", (e) => {
                            $("#alert").removeAttr("class");
                            e.preventDefault(); // update schedule
                            var hour = parseInt($("select[name=start]").val() / 100);
                            var minute = parseInt($("select[name=start]").val() % 100);

                            var date = new Date($("#year").val(), $("#month").val(), $("#day").val(), hour, minute);
                            var iso = date.toISOString();

                            $.ajax({
                                url: "/Recruitment/UpdateSchedule",
                                method: "POST",
                                data: {
                                    id: n,
                                    start: iso
                                },
                                success: (data2) => {
                                    if (data2.error) {
                                        $("#alert").addClass("error");
                                    } else {
                                        $("#alert").addClass("success");
                                    }
                                    
                                    $("#alert").text(data2.message);
                                }
                            })

                        });
                    }
                }
            })
        }
    </script>
}